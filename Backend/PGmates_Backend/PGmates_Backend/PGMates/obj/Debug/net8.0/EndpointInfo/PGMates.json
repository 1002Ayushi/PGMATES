{
  "openapi": "3.0.1",
  "info": {
    "title": "PGMates",
    "version": "1.0"
  },
  "paths": {
    "/api/Admin/stats": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authenticate/Register": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authenticate/login": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Owner/RegisterProperty": {
      "post": {
        "tags": [
          "Owner"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDTOReq"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDTOReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDTOReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDTOReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Owner/UpdateProperty/{id}": {
      "put": {
        "tags": [
          "Owner"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDTOReq"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDTOReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDTOReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDTOReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/Properties": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/Property/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/Reviews": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDTOReq"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDTOReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDTOReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDTOReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressDTOreq": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "pincode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gender": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "LoginModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PropertyDTOReq": {
        "type": "object",
        "properties": {
          "amenities": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "deposit": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "forGender": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "furnishType": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "location": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "nearByPlaces": {
            "type": "string",
            "nullable": true
          },
          "rent": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "ownerID": {
            "type": "integer",
            "format": "int32"
          },
          "isAvailable": {
            "type": "boolean"
          },
          "type": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressDTOreq"
          }
        },
        "additionalProperties": false
      },
      "RegisterModel": {
        "required": [
          "contact",
          "email",
          "firstName",
          "gender",
          "lastName",
          "password",
          "role",
          "userID"
        ],
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "contact": {
            "minLength": 1,
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "role": {
            "$ref": "#/components/schemas/Roles"
          }
        },
        "additionalProperties": false
      },
      "ReviewDTOReq": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "ratings": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "propertyId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Roles": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      }
    }
  }
}